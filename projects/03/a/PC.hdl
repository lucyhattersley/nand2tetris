// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    // Register(in=in, load=load, out=regOut);
    // Not(in=reset, out=notReset);
    // Or(a=inc, b=load, out=orOut);
    // ALU(x=regOut, y=false, zx=notReset, nx=inc, zy=true, ny=notReset, f=orOut, no=notReset, out=out);

    
    //  Register approach with 4Way 
    DMux4Way(in=load, sel[0]=inc, sel[1]=reset, a=a, b=b, c=c, d=d);

    Register(in=in, load=a, out=outA);
    Register(in=in, load=a, out=outA);
    Register(in=in, load=a, out=outA);
    Register(in=in, load=a, out=outA);

    Mux4Way16(a=outA, b=outB, c=outC, d=outD, sel[0]=inc, sel[1]=reset, out=out);


}
